Unused function bank

%%--------------------------------------------------------------------
%% @doc
%% Merge two nls maps.
%%
%% @end
%%--------------------------------------------------------------------
-spec merge_nls_map(NlsMap1, NlsMap2) -> NlsMap when
    NlsMap1 :: state(),
    NlsMap2 :: NlsMap1,
    NlsMap :: NlsMap1.
merge_nls_map(NlsMap1, NlsMap2) ->
    Langs = maps:keys(NlsMap1),
    merge_nls_map(Langs, NlsMap1, NlsMap2, #{}).

%%--------------------------------------------------------------------
%% @doc
%% See parent function merge_nls_map/2.
%% @see merge_nls_map/2.
%%
%% @end
%%--------------------------------------------------------------------
-spec merge_nls_map(Langs, NlsMap1, NlsMap2, AccNlsMap) -> NlsMap when
    Langs :: [nls_server:support_lang()],
    NlsMap1 :: nls_server:state(),
    NlsMap2 :: NlsMap1,
    AccNlsMap :: NlsMap1,
    NlsMap :: NlsMap1.
merge_nls_map([CurLang | Tail], NlsMap1, NlsMap2, AccNlsMap) ->
    CurLangMap = maps:merge(maps:get(CurLang, NlsMap1, #{}), maps:get(CurLang, NlsMap2, #{})),
    merge_nls_map(Tail, NlsMap1, NlsMap2, AccNlsMap#{CurLang => CurLangMap});
merge_nls_map([], _, _, AccNlsMap) ->
    AccNlsMap.